/*
 * This is the same continuous map program, written in the new syntax.
 */

Set x {
    shape = Circle {
        color = lightBlue()
        stroke = 2
    }
    constraint contains(x, x.shape.label)
}

IsSubset x y {
    constraint contains(y, x, 10)
    constraint outsideOf(y.shape.label, x)
    -- objective  repel(x.shape, y.shape)
}

Map f x y {
    shape = Arrow {
        start = x.shape
        end   = y.shape
        -- style = "curved"
        text = Auto
    }
    objective centerLabel(f, f.shape.label)
}

Set `R1` {
    shape = Box {
        color = srgba(0.95, 0.96, 0.92, 0.5)
        stroke = 2
    }
    objective topRightOf(R1.shape.label, R1.shape)
}

Set `R2` {
    shape = Box {
        color = srgba(0.95, 0.96, 0.92, 0.5)
        stroke = 2
        y = R1.shape.y
        x = add(R1.shape.x, 400)
        side  = R1.shape.side
    }
    objective topRightOf(R2.shape.label, R2.shape)
}

Set `U` {
    shape = Circle {
        style = "dashed"
        color = lightBlue()
        stroke = 2
        y = R1.shape.y
    }
}

Set `V` {
    shape = Circle {
        style = "dashed"
        radius = U.shape.radius
        color = lightBlue()
        stroke = 2
        y = U.shape.y
    }
}
